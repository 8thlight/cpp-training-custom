Constructors/destructors
------------------------

Now we are familiar with the basic syntax for
declaring classes in C++ let's look at some
methods that are common to all classes, those
for initialisation, copying and cleanup of the
class.

Consider the most basic declaration:

class A {};

This doesn't feel like it can do much but
with just this declaration we can write code
like

{
  A a1;     // construction
  A a2(a1)  // copy construction
  A a3 = a1 // assignment
}
// all the variables destructed here

All of these things are achieved via functions
which will be generated by the compiler if we
don't provide some of them.

Signatures of these functions are provided in
special_member_functions.hpp


Exercise:

Sometimes the compiler generated function does not produce
what we want...

Have a look at StringTest.cpp and try running test. Can you
see what the problem is?


Equality
--------

CoordinateTest.cpp has a simple test for equality. Unfortunately
it would not compile if we uncomment out the assertion. Equality
between two classes (a == b) does not come for free.

We will look at overloading operators for a class.
